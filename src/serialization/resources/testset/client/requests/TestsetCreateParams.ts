/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Scorecard from "../../../../../api";
import * as core from "../../../../../core";

export const TestsetCreateParams: core.serialization.Schema<
    serializers.TestsetCreateParams.Raw,
    Scorecard.TestsetCreateParams
> = core.serialization.object({
    name: core.serialization.string(),
    description: core.serialization.string().optional(),
    usingRetrieval: core.serialization.property("using_retrieval", core.serialization.boolean()),
    customSchema: core.serialization.property(
        "custom_schema",
        core.serialization.lazyObject(async () => (await import("../../../..")).CustomSchemaInput).optional()
    ),
});

export declare namespace TestsetCreateParams {
    interface Raw {
        name: string;
        description?: string | null;
        using_retrieval: boolean;
        custom_schema?: serializers.CustomSchemaInput.Raw | null;
    }
}
