/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Scorecard from "../../../../../api";
import * as core from "../../../../../core";

export const TestCaseCreateParams: core.serialization.Schema<
    serializers.TestCaseCreateParams.Raw,
    Scorecard.TestCaseCreateParams
> = core.serialization.object({
    userQuery: core.serialization.property("user_query", core.serialization.string()),
    context: core.serialization.string().optional(),
    response: core.serialization.string().optional(),
    ideal: core.serialization.string().optional(),
});

export declare namespace TestCaseCreateParams {
    interface Raw {
        user_query: string;
        context?: string | null;
        response?: string | null;
        ideal?: string | null;
    }
}
