/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Scorecard from "../../../../../api";
import * as core from "../../../../../core";

export const TestcaseCreateParams: core.serialization.Schema<
    serializers.TestcaseCreateParams.Raw,
    Scorecard.TestcaseCreateParams
> = core.serialization.object({
    userQuery: core.serialization.property("user_query", core.serialization.string()),
    context: core.serialization.string().optional(),
    ideal: core.serialization.string().optional(),
    customInputs: core.serialization.property(
        "custom_inputs",
        core.serialization
            .record(
                core.serialization.string(),
                core.serialization
                    .lazy(async () => (await import("../../../..")).TestcaseCreateParamsCustomInputsValue)
                    .optional()
            )
            .optional()
    ),
    customLabels: core.serialization.property(
        "custom_labels",
        core.serialization
            .record(
                core.serialization.string(),
                core.serialization
                    .lazy(async () => (await import("../../../..")).TestcaseCreateParamsCustomLabelsValue)
                    .optional()
            )
            .optional()
    ),
});

export declare namespace TestcaseCreateParams {
    interface Raw {
        user_query: string;
        context?: string | null;
        ideal?: string | null;
        custom_inputs?: Record<string, serializers.TestcaseCreateParamsCustomInputsValue.Raw | null | undefined> | null;
        custom_labels?: Record<string, serializers.TestcaseCreateParamsCustomLabelsValue.Raw | null | undefined> | null;
    }
}
