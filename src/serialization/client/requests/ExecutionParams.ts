/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import * as Scorecard from "../../../api";
import * as core from "../../../core";

export const ExecutionParams: core.serialization.Schema<serializers.ExecutionParams.Raw, Scorecard.ExecutionParams> =
    core.serialization.object({
        scoringModelName: core.serialization.property("scoring_model_name", core.serialization.string()),
        runId: core.serialization.property("run_id", core.serialization.number()),
        testsetId: core.serialization.property("testset_id", core.serialization.number()),
        apiToken: core.serialization.property("api_token", core.serialization.string()),
        modelUnderTest: core.serialization.property(
            "model_under_test",
            core.serialization.lazyObject(async () => (await import("../..")).ModelParams)
        ),
        promptTemplate: core.serialization.property("prompt_template", core.serialization.string()),
        instantScoring: core.serialization.property("instant_scoring", core.serialization.boolean().optional()),
    });

export declare namespace ExecutionParams {
    interface Raw {
        scoring_model_name: string;
        run_id: number;
        testset_id: number;
        api_token: string;
        model_under_test: serializers.ModelParams.Raw;
        prompt_template: string;
        instant_scoring?: boolean | null;
    }
}
